#! /usr/bin/env python
# -*- coding: utf-8 -*-

from urlparse import urlunparse
from os import environ as env, path

import anyjson

# compatible with tsuru/redisapi
_REDIS_HOSTS = env.get('REDIS_HOSTS')
REDIS_HOST = env.get('REDIS_HOST', 'localhost')
REDIS_PORT = env.get('REDIS_PORT', '6379')
if _REDIS_HOSTS:
    _REDIS_HOSTS = anyjson.loads(_REDIS_HOSTS)
    REDIS_HOST, REDIS_PORT = _REDIS_HOSTS[0].split(':')

REDIS_HOST = env.get('ASYNX_REDIS_HOST', REDIS_HOST)
REDIS_PORT = int(env.get('ASYNX_REDIS_PORT', REDIS_PORT))
REDIS_DB = int(env.get('ASYNX_REDIS_DB', '0'))

BIND = env.get('ASYNX_BIND', '0.0.0.0:17969')
WORKERS = int(env.get('ASYNX_WORKERS', 4))
LOGDIR = env.get('ASYNX_LOGDIR', '/tmp/asynx-log')
DAEMON_LOGLEVEL = env.get('ASYNX_DAEMON_LOGLEVEL', 'INFO')
DEBUG_LOGLEVEL = env.get('ASYNX_DEBUG_LOGLEVEL', 'DEBUG')

CELERY_BROKER_URL = env.get(
    'ASYNX_CELERY_BROKER_URL',
    urlunparse(
        ('redis',
        '{0}:{1}'.format(REDIS_HOST, REDIS_PORT),
        '/{0}'.format(REDIS_DB), '', '', '')))
CELERY_IMPORTS = ('asynx_core.taskqueue', )
CELERY_TASK_RESULT_EXPIRES = 3600
CELERY_TIMEZONE = 'Asia/Shanghai'
CELERY_RESULT_BACKEND = env.get(
    'ASYNX_CELERY_RESULT_BACKEND',
    CELERY_BROKER_URL)
CELERYD_PREFETCH_MULTIPLIER = 20
CELERYD_MAX_TASKS_PER_CHILD = 1000

try:
    import gevent
    CELERY_USE_POOL = 'gevent'
except ImportError:
    pass

CELERY_ENABLE_BEAT = True
CELERY_DEBUG_LOGLEVEL = env.get('ASYNX_CELERY_DEBUG_LOGLEVEL', DEBUG_LOGLEVEL)
CELERY_DAEMON_LOGLEVEL = env.get('ASYNX_CELERY_DAEMON_LOGLEVEL', DAEMON_LOGLEVEL)
CELERY_LOGDIR = env.get('ASYNX_CELERY_LOGDIR', path.join(LOGDIR, 'celery'))
